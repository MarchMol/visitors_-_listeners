# Generated from SimpleLang.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,90,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,0,
        1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,4,7,43,8,
        7,11,7,12,7,44,1,8,4,8,48,8,8,11,8,12,8,49,1,8,1,8,5,8,54,8,8,10,
        8,12,8,57,9,8,1,9,1,9,5,9,61,8,9,10,9,12,9,64,9,9,1,9,1,9,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,3,10,77,8,10,1,11,3,11,80,
        8,11,1,11,1,11,1,12,4,12,85,8,12,11,12,12,12,86,1,12,1,12,1,62,0,
        13,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,1,0,2,1,0,48,57,2,0,9,9,32,32,96,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
        0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
        0,0,0,1,27,1,0,0,0,3,29,1,0,0,0,5,31,1,0,0,0,7,33,1,0,0,0,9,35,1,
        0,0,0,11,37,1,0,0,0,13,39,1,0,0,0,15,42,1,0,0,0,17,47,1,0,0,0,19,
        58,1,0,0,0,21,76,1,0,0,0,23,79,1,0,0,0,25,84,1,0,0,0,27,28,5,42,
        0,0,28,2,1,0,0,0,29,30,5,47,0,0,30,4,1,0,0,0,31,32,5,43,0,0,32,6,
        1,0,0,0,33,34,5,45,0,0,34,8,1,0,0,0,35,36,5,37,0,0,36,10,1,0,0,0,
        37,38,5,40,0,0,38,12,1,0,0,0,39,40,5,41,0,0,40,14,1,0,0,0,41,43,
        7,0,0,0,42,41,1,0,0,0,43,44,1,0,0,0,44,42,1,0,0,0,44,45,1,0,0,0,
        45,16,1,0,0,0,46,48,7,0,0,0,47,46,1,0,0,0,48,49,1,0,0,0,49,47,1,
        0,0,0,49,50,1,0,0,0,50,51,1,0,0,0,51,55,5,46,0,0,52,54,7,0,0,0,53,
        52,1,0,0,0,54,57,1,0,0,0,55,53,1,0,0,0,55,56,1,0,0,0,56,18,1,0,0,
        0,57,55,1,0,0,0,58,62,5,34,0,0,59,61,9,0,0,0,60,59,1,0,0,0,61,64,
        1,0,0,0,62,63,1,0,0,0,62,60,1,0,0,0,63,65,1,0,0,0,64,62,1,0,0,0,
        65,66,5,34,0,0,66,20,1,0,0,0,67,68,5,116,0,0,68,69,5,114,0,0,69,
        70,5,117,0,0,70,77,5,101,0,0,71,72,5,102,0,0,72,73,5,97,0,0,73,74,
        5,108,0,0,74,75,5,115,0,0,75,77,5,101,0,0,76,67,1,0,0,0,76,71,1,
        0,0,0,77,22,1,0,0,0,78,80,5,13,0,0,79,78,1,0,0,0,79,80,1,0,0,0,80,
        81,1,0,0,0,81,82,5,10,0,0,82,24,1,0,0,0,83,85,7,1,0,0,84,83,1,0,
        0,0,85,86,1,0,0,0,86,84,1,0,0,0,86,87,1,0,0,0,87,88,1,0,0,0,88,89,
        6,12,0,0,89,26,1,0,0,0,8,0,44,49,55,62,76,79,86,1,6,0,0
    ]

class SimpleLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    INT = 8
    FLOAT = 9
    STRING = 10
    BOOL = 11
    NEWLINE = 12
    WS = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'*'", "'/'", "'+'", "'-'", "'%'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "INT", "FLOAT", "STRING", "BOOL", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "INT", "FLOAT", "STRING", "BOOL", "NEWLINE", "WS" ]

    grammarFileName = "SimpleLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


